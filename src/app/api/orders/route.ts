import { NextResponse } from 'next/server';

const ADMIN_BOT_TOKEN = process.env.ADMIN_BOT_TOKEN;
const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID;

export async function POST(request: Request) {
  try {
    const body = await request.json();
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    const { customerName, orderDetails } = body;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    const message = `üéâ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n–ö–ª–∏–µ–Ω—Ç: ${customerName}\n–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: ${orderDetails}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
    await fetch(`https://api.telegram.org/bot${ADMIN_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: ADMIN_CHAT_ID,
        text: message,
        parse_mode: 'HTML',
      }),
    });

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('Error processing order:', error);
    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
  }
} 